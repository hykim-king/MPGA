<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcwk.ehr.member">

    <!-- resultmap 
         column Alias TO VO
    -->
    <resultMap type="UserVO" id="userResultMap">
     <id       property="memberNum"         column="MEMBER_NUM"/>
     <result   property="seq"               column="SEQ"/>
     <result   property="id"                column="ID"/>
     <result   property="nickName"          column="NICKNAME"/> 
     <result   property="phoneNum"          column="PHONE_NUM"/>
     <result   property="email"             column="EMAIL"/>
     <result   property="pw"                column="PW"/>
     <result   property="sex"               column="SEX"/>
     <result   property="modDt"             column="MOD_DT"/>
     <result   property="regNum"            column="REG_NUM"/>
     <result   property="rank"              column="M_RANK"/>
    </resultMap>
	
	<!-- SameNickCheck -->	
	<select resultType="int" parameterType="UserVO" id="SameNickCheck">
	    SELECT COUNT(*)
	    FROM MEMBER
	    WHERE NICKNAME = #{nickName}	     
	</select>
	
	<!-- SameIdCheck -->	
	<select resultType="int" parameterType="UserVO" id="SameIDCheck">
	    SELECT COUNT(*)
        FROM MEMBER
        WHERE ID = #{id}     
	</select>
	
	<!-- SameIdCheck -->   
    <select resultType="int" parameterType="UserVO" id="SamePWCheck">
        SELECT COUNT(*)
        FROM MEMBER
        WHERE ID = #{id}
        AND   PW = #{pw}
    </select>
    
    
    <update id="doRankingSystem" parameterType="com.pcwk.ehr.member.UserVO">
	    INSERT INTO MEMBER 
	    SELECT COUNTLIKE
	    FROM(SELECT COUNT(t2.c_like) COUNTLIKE
	         FROM member t1, comment_like t2
	         WHERE t1.member_num = t2.member_num)
    </update>
    
    <!-- delete -->
    <delete id="doDelete" parameterType="com.pcwk.ehr.member.UserVO">
        DELETE FROM member
        WHERE MEMBER_NUM = #{memberNum}
    </delete>
    
    <!-- insert -->
    <insert id="doInsert" parameterType="com.pcwk.ehr.member.UserVO">
        INSERT INTO MEMBER (MEMBER_NUM, SEQ, ID, NICKNAME, PHONE_NUM, EMAIL, PW, BIRTHDAY, SEX, MOD_DT, REG_NUM, M_RANK )
        VALUES (#{memberNum},#{seq},#{id},#{nickName},#{phoneNum},#{email},#{pw},#{birthday},#{sex},sysdate,#{regNum},#{rank})
    </insert>
    
    <!--부등호 사용시 문자 그대로 해석이 필요한 경우 사용 <![CDATA[]]> -->
    <select id="doSelectOne" parameterType="UserVO"  resultMap="userResultMap">
       SELECT MEMBER_NUM,
              SEQ,
              ID,   
              NICKNAME,
              PHONE_NUM,  
              EMAIL, 
              PW,
              BIRTHDAY,
              SEX,
              TO_CHAR(MOD_DT,'YYYY/MM/DD HH24MISS') MOD_DT,
              REG_NUM,
              M_RANK
       FROM member
       WHERE MEMBER_NUM  <![CDATA[ = ]]> #{memberNum}
    </select>
    
    <update id="doUpdate" parameterType="UserVO">
       UPDATE member
       SET
            SEQ        = #{seq},
            ID         = #{id},   
            NICKNAME   = #{nickName},
            PHONE_NUM  = #{phoneNum},  
            EMAIL      = #{email}, 
            PW         = #{pw},
            BIRTHDAY   = #{birthday},
            SEX        = #{sex},
            MOD_DT     = sysdate,
            REG_NUM    = #{regNum},
            M_RANK     = #{rank}
       WHERE MEMBER_NUM = #{memberNum} 
    </update> 
    
    <delete id="deleteAll">
        DELETE FROM member
    </delete>
    
    <select id="getCount" resultType="int">
       SELECT COUNT(*) cnt FROM member
    </select>
    
    <select id="getAll"  resultMap="userResultMap">
       SELECT MEMBER_NUM,
              SEQ,
              ID,   
              NICKNAME,
              PHONE_NUM,  
              EMAIL, 
              PW,
              BIRTHDAY,
              SEX,
              TO_CHAR(MOD_DT,'YYYY/MM/DD HH24MISS') MOD_DT,
              REG_NUM,
              M_RANK
       FROM member
       ORDER BY MEMBER_NUM              
    </select>
    
    <sql id="searchCondition">
        <where>
            <choose>
                <when test=" '10' == searchDiv">
                     MEMBER_NUM  LIKE #{searchWord} ||'%'
                </when>
                <when test=" '20' == searchDiv">
                     NICKNAME  LIKE #{searchWord} ||'%'
                </when> 
                <when test=" '30' == searchDiv">
                     email  LIKE #{searchWord} ||'%'
                </when>                               
            </choose>
        </where>
    </sql>
    
    <select id="doRetrieve" parameterType="SearchVO" resultType="UserVO">
        SELECT A.* , B.*
        FROM(
                SELECT t2.rnum as num,
                       t2.MEMBER_NUM as "memberNum",
                       t2.pw,
                       t2.NICKNAME,
                       t2.M_RANK as Rank,
                       t2.BIRTHDAY,
                       t2.SEX,
                       t2.email,
                       --당일이면 시분, 년월일
                       DECODE( TO_CHAR(sysdate,'YYYYMMDD'),TO_CHAR(t2.MOD_DT,'YYYYMMDD')
                                                          ,TO_CHAR(t2.MOD_DT,'HH24:MI')
                                                          ,TO_CHAR(t2.MOD_DT,'YYYY/MM/DD') ) modDt
                FROM(
                    SELECT rownum rnum,t1.*
                    FROM(
                        SELECT *
                        FROM member
                        <include refid="searchCondition"/>
                        ORDER BY MOD_DT desc
                    )t1
                )t2
                WHERE rnum BETWEEN #{pageSize}*(#{pageNum} -1) + 1  
                               AND #{pageSize}*(#{pageNum} -1) + #{pageSize}
            )A
            CROSS JOIN
            (
                SELECT COUNT(*) totalCnt       
                FROM member
                <include refid="searchCondition"/>
            )B   
    </select>
    
</mapper>